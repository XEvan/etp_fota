import json


class Utils:

    def hex2str(self, s):
        '''
        十六进制转字符串
        :param s:
        :return:
        '''
        base = '0123456789ABCDEF'
        i = 0
        s = s.upper()
        s1 = ''
        while i < len(s):
            c1 = s[i]
            c2 = s[i + 1]
            i += 2
            b1 = base.find(c1)
            b2 = base.find(c2)
            if b1 == -1 or b2 == -1:
                return None
            s1 += chr((b1 << 4) + b2)
        return s1

    def str2hex(self, s):
        '''
        字符串转十六进制
        '''
        tmp = []
        for c in s:
            trs = hex(ord(c)).replace('0x', '')
            if len(trs) == 1:
                trs = "0" + trs  # 格式化成两位，比如："a"格式化成"0a"
            tmp.append(trs)
        res = "".join(tmp)

        return res


if __name__ == '__main__':
    u = Utils()
    x = '7b0a202020226170706c69636174696f6e22203a207b0a20202020202022626f6f6b54696d6522203a20312e383434363734333532383234383731652b31392c0a20202020202022656375496e666f22203a206e756c6c2c0a202020202020227461736b494422203a203936313832392e302c0a2020202020202275706452657322203a2031300a2020207d2c0a20202022636f6e74726f6c6c657222203a207b0a202020202020226369706865724d6f646522203a20312c0a20202020202022636f6465634d6f646522203a20312c0a202020202020226465627567466c616722203a20302c0a20202020202022726573756c7422203a20302c0a202020202020227369676e4d6f646522203a20300a2020207d2c0a202020226469737061746368657222203a207b0a2020202020202241494422203a20342c0a202020202020224d494422203a2031362c0a2020202020202261707056657222203a2022312e302e30222c0a202020202020226576656e74494422203a20313534363330333530312e300a2020207d2c0a2020202268656164657222203a207b0a20202020202022636c69656e74494422203a20224c534a31323334353637383930313233222c0a20202020202022636c69656e7449445479706522203a20302c0a2020202020202270726f746f636f6c56657222203a2022312e302e30222c0a2020202020202274696d657374616d7022203a20313233343536373738393939392e300a2020207d0a7d0a00'
    x = '0000022befbbbf7b0a202020226170706c69636174696f6e22203a207b0a20202020202022626f6f6b54696d6522203a20312e383434363734333532383234383731652b31392c0a20202020202022656375496e666f22203a206e756c6c2c0a202020202020227461736b494422203a203936313832392e302c0a2020202020202275706452657322203a20320a2020207d2c0a20202022636f6e74726f6c6c657222203a207b0a202020202020226369706865724d6f646522203a20312c0a20202020202022636f6465634d6f646522203a20312c0a202020202020226465627567466c616722203a20302c0a20202020202022726573756c7422203a20302c0a202020202020227369676e4d6f646522203a20300a2020207d2c0a202020226469737061746368657222203a207b0a2020202020202241494422203a20342c0a202020202020224d494422203a2031362c0a2020202020202261707056657222203a2022312e302e30222c0a202020202020226576656e74494422203a20313534363330333530312e300a2020207d2c0a2020202268656164657222203a207b0a20202020202022636c69656e74494422203a20224c534a31323334353637383930313233222c0a20202020202022636c69656e7449445479706522203a20302c0a2020202020202270726f746f636f6c56657222203a2022312e302e30222c0a2020202020202274696d657374616d7022203a20313233343536373738393939392e300a2020207d0a7d0a00'
    x = '00000124efbbbf7b226170706c69636174696f6e223a7b226132537461747573223a307d2c22636f6e74726f6c6c6572223a7b226369706865724d6f6465223a302c22636f6465634d6f6465223a302c226465627567466c6167223a302c22726573756c74223a302c227369676e4d6f6465223a307d2c2264697370617463686572223a7b22414944223a342c224d4944223a342c22617070566572223a22312e302e30222c226576656e744944223a313534363330333530317d2c22686561646572223a7b22636c69656e744944223a224f54415445535442454e43483130303031222c22636c69656e74494454797065223a302c2270726f746f636f6c566572223a22312e322e31222c2274696d657374616d70223a313631313131323030393834357d7d00'
    # x = '0000024defbbbf7b226170706c69636174696f6e223a7b2264657363446f776e6c6f616455524c223a22687474703a2f2f736169632e6368652e6c696e6b3a343838312f656e63727970742f6f74612f63616d706169676e2f31313438322f61366636613438613866383334303937623563336439326133656638633466652f6d616e69666573745f646f776e6c6f61642e786d6c222c22646f776e6c6f61644d6f6465223a312c2265637544657363446973706c6179223a312c226d697373696f6e50756254696d65223a313631303634303030303030302c227061636b6167654d6f6465223a312c227461736b44657363223a224f5441544553542d30313135222c227461736b4944223a3936313832392c227570644d6f6465223a312c2275706453746174223a312c2276656869636c655068617365223a312c2276657273696f6e436f6d70223a307d2c22636f6e74726f6c6c6572223a7b226369706865724d6f6465223a302c22636f6465634d6f6465223a302c226465627567466c6167223a302c22726573756c74223a302c227369676e4d6f6465223a307d2c2264697370617463686572223a7b22414944223a342c224d4944223a392c22617070566572223a22312e302e30222c226576656e744944223a313534363330333530317d2c22686561646572223a7b22636c69656e744944223a224f54415445535442454e43483130303031222c22636c69656e74494454797065223a302c2270726f746f636f6c566572223a22312e322e31222c2274696d657374616d70223a313631313131323031303235307d7d00'
    # x = '474554202f736f757263652f366465633435326230643430323935636235373237373836363838326364326139323637633062396234336139356437363163323966313131336435373431392f7570646174652e7a697020485454502f312e310d0a486f73743a20736169632e6368652e6c696e6b3a343838310d0a52616e67653a2062797465733d302d0d0a4163636570743a202a2f2a0d0a0d0a'
    a_bytes = u.hex2str(x)
    # print(a_bytes)
    res = json.loads(str(a_bytes[a_bytes.index("{"):-1]))
    print("解码：", res)

    # 格式化json
    format_json = json.dumps(res, indent=3, separators=(',', ' : '))
    res = u.str2hex(format_json)
    print("编码：", res)
